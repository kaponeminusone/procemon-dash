"""Initial migration

Revision ID: e37e47804523
Revises: 
Create Date: 2024-10-07 02:47:52.378422

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e37e47804523'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entradas',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=True),
    sa.Column('tipo', sa.Enum('type1', 'type2', 'type3', name='tipoenum'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('indicadores',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('tipo', sa.Enum('type1', 'type2', 'type3', name='tipoenum'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procesos',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('num_etapas', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuario',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('tipo', sa.Enum('type1', 'type2', 'type3', name='tipoenum'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('etapas',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('num_etapa', sa.BigInteger(), nullable=False),
    sa.Column('id_proceso', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['id_proceso'], ['procesos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('indicadores_entradas',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('id_entrada', sa.BigInteger(), nullable=False),
    sa.Column('id_indicador', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['id_entrada'], ['entradas.id'], ),
    sa.ForeignKeyConstraint(['id_indicador'], ['indicadores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('registro',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('id_usuario', sa.BigInteger(), nullable=False),
    sa.Column('descripcion', sa.String(), nullable=True),
    sa.Column('creado', sa.TIMESTAMP(), nullable=True),
    sa.Column('modificado', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('etapa_indicadores',
    sa.Column('id_etapa', sa.BigInteger(), nullable=False),
    sa.Column('id_indicador_entrada', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['id_etapa'], ['etapas.id'], ),
    sa.ForeignKeyConstraint(['id_indicador_entrada'], ['indicadores.id'], ),
    sa.PrimaryKeyConstraint('id_etapa', 'id_indicador_entrada')
    )
    op.create_table('etapas_entradas',
    sa.Column('id_etapa', sa.BigInteger(), nullable=False),
    sa.Column('id_entrada', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['id_entrada'], ['entradas.id'], ),
    sa.ForeignKeyConstraint(['id_etapa'], ['etapas.id'], ),
    sa.PrimaryKeyConstraint('id_etapa', 'id_entrada')
    )
    op.create_table('etapas_salidas',
    sa.Column('id_etapa', sa.BigInteger(), nullable=False),
    sa.Column('id_entrada', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['id_entrada'], ['entradas.id'], ),
    sa.ForeignKeyConstraint(['id_etapa'], ['etapas.id'], ),
    sa.PrimaryKeyConstraint('id_etapa')
    )
    op.create_table('registro_entradas',
    sa.Column('id_registro', sa.BigInteger(), nullable=False),
    sa.Column('id_entrada', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['id_entrada'], ['entradas.id'], ),
    sa.ForeignKeyConstraint(['id_registro'], ['registro.id'], ),
    sa.PrimaryKeyConstraint('id_registro')
    )
    op.create_table('registro_indicadores',
    sa.Column('id_registro', sa.BigInteger(), nullable=False),
    sa.Column('id_indicador', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['id_indicador'], ['indicadores.id'], ),
    sa.ForeignKeyConstraint(['id_registro'], ['registro.id'], ),
    sa.PrimaryKeyConstraint('id_registro')
    )
    op.create_table('registro_procesos',
    sa.Column('id_registro', sa.BigInteger(), nullable=False),
    sa.Column('id_proceso', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['id_proceso'], ['procesos.id'], ),
    sa.ForeignKeyConstraint(['id_registro'], ['registro.id'], ),
    sa.PrimaryKeyConstraint('id_registro')
    )
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('registro_procesos')
    op.drop_table('registro_indicadores')
    op.drop_table('registro_entradas')
    op.drop_table('etapas_salidas')
    op.drop_table('etapas_entradas')
    op.drop_table('etapa_indicadores')
    op.drop_table('registro')
    op.drop_table('indicadores_entradas')
    op.drop_table('etapas')
    op.drop_table('usuario')
    op.drop_table('procesos')
    op.drop_table('indicadores')
    op.drop_table('entradas')
    op.execute("DROP TYPE tipoenum")
    # ### end Alembic commands ###
